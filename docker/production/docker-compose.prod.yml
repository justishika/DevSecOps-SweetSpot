version: '3.8'

services:
  # SweetSpot Production Application
  sweetspot-app:
    build:
      context: ../../
      dockerfile: docker/production/Dockerfile
    container_name: sweetspot-app-prod
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3001
    volumes:
      - ../../uploads:/app/uploads
      - ../../server/uploads:/app/server/uploads
    networks:
      - sweetspot-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sweetspot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - sweetspot-app
    networks:
      - sweetspot-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: sweetspot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ../../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sweetspot-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: sweetspot-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ../../monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - sweetspot-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  sweetspot-network:
    driver: bridge